// Decompiled with JetBrains decompiler
// Type: administration_logs_list
// Assembly: fbs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EE45F058-4776-4456-92BB-8311B7676A83
// Assembly location: D:\RBS\rbs\rbs\bin\fbs.dll

using ASP;
using skynapse.fbs;
using System;
using System.Collections.Generic;
using System.Data;
using System.Text;
using System.Web;
using System.Web.Profile;
using System.Web.SessionState;
using System.Web.UI.WebControls;

public class administration_logs_list : fbs_base_page, IRequiresSessionState
{
  public string html_table;
  public asset_api _objAsset;
  public DataSet data;
  protected Button btnExportExcel;
  protected Label lblDateRage;
  protected DropDownList ddl_module_name;
  protected DropDownList ddl_action;
  protected DropDownList ddl_status;
  protected HiddenField hdn_log_start;
  protected HiddenField hdn_log_end;
  protected HiddenField hdn_modulename;
  protected HiddenField hdn_action;
  protected HiddenField hdn_status;
  protected HiddenField hdn_daterange;
  protected HiddenField hdn_totalrecords;
  protected HiddenField hdn_searchcondition;
  protected HiddenField hdn_id;

  protected new void Page_Load(object sender, EventArgs e)
  {
    try
    {
      this.btnExportExcel.Attributes.Add("style", "width:160px; height:29px; font-weight:normal; color:#333; font-size:14px; font-family:Segoe UI,Helvetica,Arial,sans-serif; padding:0 0 6px 13px; background-color:#FFF; text-align:left;");
      if (this.IsPostBack)
        return;
      this.populate_module_name();
      this.pageload_data();
    }
    catch (Exception ex)
    {
      fbs_base_page.log.Error((object) "Error -> ", ex);
    }
  }

  private void pageload_data()
  {
    try
    {
      this.populate_ui();
    }
    catch (Exception ex)
    {
      fbs_base_page.log.Error((object) "Error -> ", ex);
    }
  }

  private void populate_module_name()
  {
    try
    {
      string str1 = HttpContext.GetGlobalResourceObject("fbs", "module_name").ToString();
      char[] chArray = new char[1]{ ';' };
      foreach (string str2 in str1.Split(chArray))
        this.ddl_module_name.Items.Add(new ListItem()
        {
          Text = str2
        });
    }
    catch (Exception ex)
    {
      fbs_base_page.log.Error((object) "Error -> ", ex);
    }
  }

  private void populate_ui()
  {
    try
    {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.Append("<table class='table table-striped table-bordered table-hover' id='loglist_table'>");
      stringBuilder.Append("<thead>");
      stringBuilder.Append("<tr>");
      stringBuilder.Append("<th style='width:15%;' class='hidden-480'>Module</th>");
      stringBuilder.Append("<th style='width:15%;' class='hidden-480'>Action</th>");
      stringBuilder.Append("<th style='width:6%;' class='hidden-480'>Status</th>");
      stringBuilder.Append("<th  style='width:15%;' class='hidden-480'>Created On</th>");
      stringBuilder.Append("<th style='width:15%;' class='hidden-480'>Created By</th>");
      stringBuilder.Append("<th style='width:5%;' class='hidden-480'>Details</th>");
      stringBuilder.Append("</tr>");
      stringBuilder.Append("</thead>");
      stringBuilder.Append("<tbody>");
      stringBuilder.Append("</tbody>");
      stringBuilder.Append("</table>");
      this.html_table = stringBuilder.ToString();
    }
    catch (Exception ex)
    {
      fbs_base_page.log.Error((object) "Error -> ", ex);
    }
  }

  protected void btnExportExcel_Click(object sender, EventArgs e)
  {
    try
    {
      string str1 = Convert.ToDateTime(this.hdn_log_start.Value).ToString(api_constants.sql_datetime_format_short);
      string str2 = Convert.ToDateTime(this.hdn_log_end.Value).ToString(api_constants.sql_datetime_format_short);
      this.data = this.reportings.get_logs("1", "10000", "module_name", "Asc", !(this.hdn_searchcondition.Value == "") ? this.hdn_searchcondition.Value : "%", this.current_user.account_id, this.hdn_modulename.Value, this.hdn_action.Value, this.hdn_status.Value, str1 + " 00:00:00:00", str2 + " 23:59:59:59");
      this.users.get_users(this.current_user.account_id);
      Dictionary<string, string> dictionary = new Dictionary<string, string>();
      dictionary.Add("module_name", "Module Name");
      dictionary.Add("status", "Status");
      dictionary.Add("action", "action");
      dictionary.Add("created_on", "Created On");
      dictionary.Add("createduser", "Created By");
      dictionary.Add("old_value", "Old Value");
      dictionary.Add("new_value", "New Value");
      excel excel = new excel();
      excel.file_name = "Loglist_" + this.current_timestamp.ToString(api_constants.display_datetime_format) + ".xls";
      excel.footer = "Generated By : " + this.current_user.full_name + "     <br/> Generated on :  " + this.tzapi.current_user_timestamp().ToString(api_constants.display_datetime_format);
      excel.data = this.data;
      excel.column_names = dictionary;
      excel.table_identifier = "Loglist";
      excel.header = "Log List";
      this.Response.Clear();
      this.Response.AddHeader("content-disposition", "attachment;filename=_AuditLogList_" + this.current_timestamp.ToString(api_constants.display_datetime_format) + ".xls");
      this.Response.Charset = "";
      this.Response.ContentType = Resources.fbs.excel_mime_type;
      this.Response.Write(this.get_excel(excel));
      this.Response.End();
    }
    catch (Exception ex)
    {
      fbs_base_page.log.Error((object) "Error -> ", ex);
    }
  }

  public string get_excel(excel obj)
  {
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      stringBuilder.Append("<table class='" + obj.table_identifier + "_table'>");
      stringBuilder.Append("<tr><td colspan='" + (object) obj.column_names.Count + "' class='" + obj.table_identifier + "_header'>" + obj.header + "</td></tr>");
      stringBuilder.Append("<tr><td></td></tr><tr>");
      stringBuilder.Append("<td class='" + obj.table_identifier + "_header_cell' style='text-align:centre;'>Module Name</td>");
      stringBuilder.Append("<td class='" + obj.table_identifier + "_header_cell' style='text-align:centre;'>Action</td>");
      stringBuilder.Append("<td class='" + obj.table_identifier + "_header_cell' style='text-align:centre;'>Status</td>");
      stringBuilder.Append("<td class='" + obj.table_identifier + "_header_cell' style='text-align:centre;'>Created On</td>");
      stringBuilder.Append("<td class='" + obj.table_identifier + "_header_cell' style='text-align:centre;'>Created By</td>");
      stringBuilder.Append("<td class='" + obj.table_identifier + "_header_cell' style='text-align:centre;'>Description</td>");
      stringBuilder.Append("</tr>");
      if (obj.data.Tables[0].Rows.Count == 0)
      {
        stringBuilder.Append("<tr><td colspan='" + (object) obj.column_names.Count + "' class='" + obj.table_identifier + "_norecords'>No records found</td></tr>");
      }
      else
      {
        foreach (DataRow row in (InternalDataCollectionBase) obj.data.Tables[0].Rows)
        {
          stringBuilder.Append("<tr>");
          stringBuilder.Append("<td class='" + obj.table_identifier + "_row_cell' style='text-align:centre;'>" + row["module_name"].ToString() + "</td>");
          stringBuilder.Append("<td class='" + obj.table_identifier + "_row_cell' style='text-align:centre;'>" + row["action"].ToString() + "</td>");
          stringBuilder.Append("<td class='" + obj.table_identifier + "_row_cell' style='text-align:centre;'>" + row["status"].ToString() + "</td>");
          stringBuilder.Append("<td class='" + obj.table_identifier + "_row_cell' style='text-align:centre;'>" + Convert.ToDateTime(row["created_on"]).ToString(api_constants.display_datetime_format) + "</td>");
          stringBuilder.Append("<td class='" + obj.table_identifier + "_row_cell' style='text-align:centre;'>" + row["createduser"].ToString() + "</td>");
          stringBuilder.Append("<td class='" + obj.table_identifier + "_row_cell' style='text-align:centre;'>" + this.logs.format_data(row["old_value"].ToString(), row["new_value"].ToString()) + "</td>");
          stringBuilder.Append("</tr>");
        }
      }
      stringBuilder.Append("<tr><td></td></tr><tr><td colspan='" + (object) obj.column_names.Count + "' class='" + obj.table_identifier + "_footer'>" + obj.footer + "</td></tr>");
      stringBuilder.Append("</table>");
    }
    catch (Exception ex)
    {
      fbs_base_page.log.Error((object) "Error -> ", ex);
    }
    return stringBuilder.ToString();
  }

  protected DefaultProfile Profile => (DefaultProfile) this.Context.Profile;

  protected global_asax ApplicationInstance => (global_asax) this.Context.ApplicationInstance;
}
